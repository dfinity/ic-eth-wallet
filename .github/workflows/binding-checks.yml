name: Binding Checks

on:
  pull_request:
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-24.04
    steps:

      - name: Check if commits can be added
        id: check_can_add_commit
        run: |
          echo "can_add_commit=${{ secrets.GIX_CREATE_PR_PAT != '' && github.event_name == 'pull_request' }}" >> $GITHUB_OUTPUT

      - name: Checkout code
        if: steps.check_can_add_commit.outputs.can_add_commit == 'true'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GIX_CREATE_PR_PAT }}

      - name: Checkout code
        if: steps.check_can_add_commit.outputs.can_add_commit == 'false'
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - # Any new or changed canisters
                'dfx.json'
              - # Any new or changed .did files
                '**/*.did'
              - # Scripts, GitHub actions that contain 'backend' in their path.
                '**/*backend*'
              - # The backend source code
                'src/backend/**'
              - 'src/shared/**'
              - # Rust files such as Cargo.lock, Cargo.toml and rust-toolchain.toml
                '**/Cargo*'
              - '**/*rust*'
              - # Scripts that download external Candid files, with false positives.
                'scripts/build.*.sh'
              - # This workflow
                '.github/workflows/binding-checks.yml'

      - name: Build oisy-backend WASM
        if: steps.changes.outputs.src == 'true'
        uses: ./.github/actions/oisy-backend

      - name: Prepare
        if: steps.changes.outputs.src == 'true'
        uses: ./.github/actions/prepare

      - name: Install dfx
        if: steps.changes.outputs.src == 'true'
        uses: dfinity/setup-dfx@main

      - name: Install binstall
        if: steps.changes.outputs.src == 'true'
        run: |
          BINSTALL_VERSION="1.8.0"
          curl -L --proto '=https' --tlsv1.2 -sSf "https://github.com/cargo-bins/cargo-binstall/releases/download/v${BINSTALL_VERSION}/cargo-binstall-x86_64-unknown-linux-musl.tgz" | tar -xvzf - cargo-binstall
          ./cargo-binstall -y --force "cargo-binstall@$BINSTALL_VERSION"
          rm cargo-binstall

      - name: Install candid-extractor
        if: steps.changes.outputs.src == 'true'
        run: cargo binstall --no-confirm candid-extractor@0.1.4 && candid-extractor --version

      - name: Generate bindings
        if: steps.changes.outputs.src == 'true'
        run: ./scripts/bind.sh --check
  binding-checks-pass:
    needs: [ 'generate' ]
    runs-on: ubuntu-24.04
    steps:
      - name: Cleared for merging
        run: echo OK
